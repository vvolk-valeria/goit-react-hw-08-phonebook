{"version":3,"file":"static/js/375.9ebd1ec4.chunk.js","mappings":"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","sources":["pages/Pages.styled.jsx","components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","redux/filter/selectors.js","components/Messages/Messages.styled.jsx","components/Messages/Messages.js","components/ContactList/ContactList.jsx","pages/Phonebook.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.section`\n  margin: 50px auto;\n  height: auto;\n  width: 500px;\n  border-radius: 5px;\n  background-color: rgba(140, 247, 227, 0.8);\n  padding: 20px;\n  box-shadow: 0px 0px 10px 15px rgba(146, 207, 235, 0.75);\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 25px;\n  text-align: center;\n  color: #0b118f;\n  font-size: 24px;\n  font-weight: 700;\n`;\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\n\nexport const FormContainer = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: rgb(29 107 125);\n  box-shadow: 0px 0px 10px 5px rgba(146, 207, 235, 0.75);\n  padding: 15px 10px;\n  text-align: center;\n  margin-bottom: 25px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-weight: 700;\n  font-size: 18px;\n  margin-bottom: 5px;\n`;\n\nexport const Input = styled(Field)`\n  margin-bottom: 10px;\n  padding: 5px 10px;\n  font-weight: 400;\n  font-size: 14px;\n  border-radius: 5px;\n  border: none;\n`;\n\nexport const Btn = styled.button`\n  padding: 5px 20px;\n  font-weight: 700;\n  font-size: 18px;\n  color: rgb(44 127 146);\n  border-radius: 5px;\n  border: none;\n  background-color: rgba(150, 248, 230, 0.8);\n  box-shadow: 0px 0px 5px 5px rgba(146, 207, 235, 0.75);\n  cursor: pointer;\n  :hover {\n    color: rgb(179, 237, 250);\n    background-color: rgb(69, 243, 185);\n    box-shadow: 0px 0px 5px 5px rgb(125, 177, 201);\n  }\n`;\n\nexport const ErrorInfo = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  color: rgb(233, 238, 213);\n  background-color: rgb(113, 147, 243);\n  padding: 10px 20px;\n  border-radius: 5px;\n`;\n","\n export const selectContacts = state => state.contacts.items;\n export const selectIsLoading = state => state.contacts.isLoading;\n export const selectError = state => state.contacts.error;\n","import * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport {\n  FormContainer,\n  Label,\n  Btn,\n  Input,\n  ErrorInfo,\n} from './ContactForm.styled';\n\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { addContact } from '../../redux/contacts/operations';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().min(8).required(),\n});\n\nconst initialValues = {\n  id: '',\n  name: '',\n  number: '',\n};\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorInfo>{message}</ErrorInfo>}\n    />\n  );\n};\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (value, { resetForm }) => {\n    const ContactValue = value.name;\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === ContactValue.toLowerCase()\n      )\n    ) {\n      toast.error(`${ContactValue} is already in contacts.`);\n      return;\n    }\n\n    const newContact = {\n      name: value.name,\n      number: value.number,\n    };\n\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  return (\n    <>\n      <Formik\n        onSubmit={handleSubmit}\n        initialValues={initialValues}\n        validationSchema={schema}\n      >\n        <FormContainer autoComplete=\"off\">\n          <Label htmlFor=\"name\">Name </Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <FormError name=\"name\" component=\"div\" />\n          <Label htmlFor=\"number\">Phone Number</Label>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <FormError name=\"number\" component=\"div\" />\n          <Btn type=\"submit\">Add contact</Btn>\n        </FormContainer>\n      </Formik>\n      <Toaster position=\"top-right\" reverseOrder={false} />\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  color: rgb(29 107 125);\n  box-shadow: 0px 0px 10px 5px rgba(146, 207, 235, 0.75);\n  padding: 15px 10px;\n  text-align: center;\n  margin-bottom: 25px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-weight: 700;\n  font-size: 18px;\n  margin-bottom: 5px;\n`;\nexport const Input = styled.input`\n  padding: 5px 10px;\n  font-weight: 400;\n  font-size: 14px;\n  border-radius: 5px;\n  border: none;\n`;\n","import { Label, Input, FilterContainer } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setValue } from '../../redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    dispatch(setValue(e.currentTarget.value));\n  };\n\n  return (\n    <FilterContainer>\n      <Label htmlFor=\"filter\">Find contacts by name</Label>\n      <Input type=\"text\" name=\"filter\" onChange={onChange} />\n    </FilterContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContainerList = styled.ul`\n  color: rgb(29 107 125);\n  box-shadow: 0px 0px 10px 5px rgba(146, 207, 235, 0.75);\n  padding: 15px 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5px 10px;\n  font-weight: 400;\n  font-size: 16px;\n  margin-bottom: 5px;\n  border-bottom: 1px solid rgba(146, 207, 235, 0.75);\n`;\n\nexport const Btn = styled.button`\n  padding: 5px 20px;\n  color: rgb(44 127 146);\n  border-radius: 5px;\n  border: none;\n  background-color: rgba(150, 248, 230, 0.8);\n  box-shadow: 0px 0px 5px 2px rgba(146, 207, 235, 0.75);\n  cursor: pointer;\n  :hover {\n    color: rgb(179, 237, 250);\n    background-color: rgb(69, 243, 185);\n    box-shadow: 0px 0px 5px 2px rgb(125, 177, 201);\n  }\n`;\n","\n export const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  color: rgb(29 107 125);\n  box-shadow: 0px 0px 10px 5px rgba(146, 207, 235, 0.75);\n  padding: 20px 20px;\n  text-align: center;\n`;\n\nexport const Text = styled.p`\n  font-weight: 700;\n  font-size: 18px;\n`;\nexport const TextError = styled.p`\n  color: #0b118f;\n  font-weight: 700;\n  font-size: 18px;\n`;\n","import {Container, Text,TextError } from \"./Messages.styled\";\n\nexport const MessageNoContacts = () => {\n    return <Container>\n        <Text>No contacts.</Text>\n    </Container>\n};\n\nexport const MessageError = () => {\n    return <Container>\n        <TextError>Oops, something went wrong! Reload the page or try again later!</TextError>\n    </Container>\n};","import { ContainerList, Item, Btn } from './ContactList.styled';\nimport { selectContacts, selectError } from '../../redux/contacts/selectors';\nimport { selectFilter } from '../../redux/filter/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { MessageError, MessageNoContacts } from '../Messages/Messages';\nimport toast from 'react-hot-toast';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const error = useSelector(selectError);\n\n  const findContact = (array, query) => {\n    const queryValue = query.toLowerCase();\n    return array.filter(arr => arr.name.toLowerCase().includes(queryValue));\n  };\n\n  const items = findContact(contacts, filter);\n\n  if (items.length === 0 && filter) {\n    toast.error(`${filter} not found!`);\n  }\n\n  return (\n    <ContainerList>\n      {items.length === 0 && !error && <MessageNoContacts />}\n      {items.map(item => {\n        return (\n          <Item key={item.id}>\n            <p>{item.name}</p>\n            <span>{item.phone}</span>\n            <Btn type=\"button\" onClick={() => dispatch(deleteContact(item.id))}>\n              Delete\n            </Btn>\n          </Item>\n        );\n      })}\n      {error && <MessageError />}\n    </ContainerList>\n  );\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Container, Title } from './Pages.styled';\nimport { selectIsLoading, selectError } from '../redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Loader } from '../components/Loader/Loader';\nimport toast from 'react-hot-toast';\n\nconst PhonebookPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n      <ContactForm />\n\n      <Title>Contacts</Title>\n      <Filter />\n      {isLoading && !error && <Loader />}\n      <ContactList />\n      {error &&\n        toast.error(\n          `Oops, something went wrong! Reload the page or try again later!`\n        )}\n    </Container>\n  );\n};\n\nexport default PhonebookPage;"],"names":["Container","styled","Title","FormContainer","Form","Label","Input","Field","Btn","ErrorInfo","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","schema","yup","shape","name","required","number","min","initialValues","id","FormError","render","message","ContactForm","useSelector","dispatch","useDispatch","onSubmit","value","resetForm","ContactValue","find","contact","toLowerCase","toast","newContact","addContact","validationSchema","autoComplete","htmlFor","type","pattern","title","component","position","reverseOrder","FilterContainer","Filter","onChange","e","setValue","currentTarget","ContainerList","Item","selectFilter","filter","Text","TextError","MessageNoContacts","MessageError","ContactList","array","query","queryValue","arr","includes","findContact","length","map","item","phone","onClick","deleteContact","useEffect","fetchContacts","Loader"],"sourceRoot":""}